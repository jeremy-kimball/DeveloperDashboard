@model Dashboard
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


<script type="text/javascript">
    var gridStackInstance;
    var serializedData;

    document.addEventListener('DOMContentLoaded', function () {
        gridStackInstance = GridStack.init({
            minRow: 10,
            sizeToContent: true
        });
        //for debug
        //console.log("GridStack instance:", gridStackInstance);

        // start with grid locked
        gridStackInstance.movable('.grid-stack-item', false);
        // and show the grid lock button correctly
        document.getElementById('buttonLock').style.visibility = 'hidden';
        document.getElementById('buttonUnlock').style.visibility = 'visible';

        gridStackInstance.on('dragstart', function (event, el) {
            $('#myGrid').css('background-color', 'rgba(95, 95, 95, 0.18)'); // Change the color as needed
        });
        
        gridStackInstance.on('dragstop', function (event, el) {
            $('#myGrid').css('background-color', ''); // Resets to original or you can set a specific color
        });


    });

    function changeButtonColor(button) {
        $(button).addClass('green-background grow-shrink');
        setTimeout(() => {
            $(button).removeClass('green-background grow-shrink');
        }, 500);
    }

    function lock() {
        if (!gridStackInstance) {
            console.error("GridStack instance is not initialized");
            return;
        }
        gridStackInstance.movable('.grid-stack-item', false);
        document.getElementById('buttonLock').style.visibility = 'hidden';
        document.getElementById('buttonUnlock').style.visibility = 'visible';
    }
    function unlock() {
        if (!gridStackInstance) {
            console.error("GridStack instance is not initialized");
            return;
        }
        gridStackInstance.movable('.grid-stack-item', true);
        document.getElementById('buttonUnlock').style.visibility = 'hidden';
        document.getElementById('buttonLock').style.visibility = 'visible';
    }
    function save(button) {

        serializedData = gridStackInstance.save();
        //document.querySelector('#saved-data').value = JSON.stringify(serializedData, null, '  ');

        $.ajax({
            url: '/Dashboard/' + @Model.Id + '/Save',
            type: 'POST',
            data: { 
                serializedData: JSON.stringify(serializedData, null, '  '),
                id: @Model.Id
            },
            success: function () {
                changeButtonColor(button);
            },
            error: function (xhr, status, error) {
                var errorMessage = "Error: " + xhr.status + " " + xhr.statusText;
                alert("Save Unsuccessfull!");
                $('#linkContainer').html(errorMessage);
            }
        });
    }


</script>

<style>
    #buttonEdit{
        position: fixed;
        bottom: 9em;
        right: 1em;
    }
    #buttonLock{
        position:fixed;
        bottom:6.5em;
        right:1em;
    }
    #buttonUnlock {
        position: fixed;
        bottom: 6.5em;
        right: 1em;
        visibility: hidden; /* Initially hidden */
    }
    #buttonSave {
        position: fixed;
        bottom: 4em;
        right: 1em;
    }
    #savebtn:focus{
        outline: none !important;
        box-shadow: none !important;
        background-color: green !important;
    }
    .green-background {
        background-color: green !important;
    }
    @@keyframes growShrink {
        0%, 100% {
            transform: scale(1);
        }

        50% {
            transform: scale(2); /* Adjust scale value to control growth size */
        }
    }
    .grow-shrink {
        animation: growShrink 0.5s;
    }
</style>

<!-- title -->
<h1 style="text-align:center;">@Model.Name</h1>
<hr></hr>

<!-- edit dashboard -->
<div id="buttonEdit">
    <form action="/Dashboard/@Model.Id/Edit" method="get">
        <button type="submit" class="btn btn-primary"><i class="bi bi-gear-fill"></i></button>
    </form>
</div>

<!-- unlock and lock grid -->
<div id="buttonLock">
    <button onclick="lock()" class="btn btn-primary"><i class="bi bi-unlock-fill"></i></button>
</div>
<div id="buttonUnlock">
    <button onclick="unlock()" class="btn btn-primary"><i class="bi bi-lock-fill"></i></button>
</div>
<!-- save grid -->
<div id="buttonSave">
    <button id="savebtn" onclick="save(this);" class="btn btn-primary"><i class="bi bi-floppy-fill"></i></button>
</div>
<!-- show saved serialization data (debug purposes) 
<textarea id="saved-data" style="width: 100%" cols="100" rows="20" readonly="readonly"></textarea>
-->
<!-- display widgets-->
@if(Model.Widgets != null)
{
        <div id="myGrid" class="grid-stack">
            @if (Model.Widgets != null)
            {
                foreach (var widget in Model.Widgets)
                {
                <div class="grid-stack-item" id="@widget.Name"
                         @Html.Raw(widget.Properties)
                         gs-id="@widget.Id"
                         gs-locked="true"
                         gs-x="@widget.X"
                         gs-y="@widget.Y"
                         gs-w="@widget.W"
                         gs-h="@widget.H">
                        <div class="grid-stack-item-content">
                            @Html.Partial($"{widget.Content}")
                        </div>
                    </div>
                }
            }
        </div>
}