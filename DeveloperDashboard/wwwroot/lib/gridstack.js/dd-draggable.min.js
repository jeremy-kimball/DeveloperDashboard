import{DDManager}from"./dd-manager";import{Utils}from"./utils";import{DDBaseImplement}from"./dd-base-impl";import{isTouch,touchend,touchmove,touchstart,pointerdown}from"./dd-touch";const skipMouseDown='input,textarea,button,select,option,[contenteditable="true"],.ui-resizable-handle';class DDDraggable extends DDBaseImplement{constructor(e,t={}){super(),this.dragScale={x:1,y:1},this.el=e;var i=(this.option=t).handle.substring(1);this.dragEl=!e.classList.contains(i)&&e.querySelector(t.handle)||e,this._mouseDown=this._mouseDown.bind(this),this._mouseMove=this._mouseMove.bind(this),this._mouseUp=this._mouseUp.bind(this),this.enable()}on(e,t){super.on(e,t)}off(e){super.off(e)}enable(){!1!==this.disabled&&(super.enable(),this.dragEl.addEventListener("mousedown",this._mouseDown),isTouch&&(this.dragEl.addEventListener("touchstart",touchstart),this.dragEl.addEventListener("pointerdown",pointerdown)),this.el.classList.remove("ui-draggable-disabled"))}disable(e=!1){!0!==this.disabled&&(super.disable(),this.dragEl.removeEventListener("mousedown",this._mouseDown),isTouch&&(this.dragEl.removeEventListener("touchstart",touchstart),this.dragEl.removeEventListener("pointerdown",pointerdown)),e||this.el.classList.add("ui-draggable-disabled"))}destroy(){this.dragTimeout&&window.clearTimeout(this.dragTimeout),delete this.dragTimeout,this.mouseDownEvent&&this._mouseUp(this.mouseDownEvent),this.disable(!0),delete this.el,delete this.helper,delete this.option,super.destroy()}updateOption(t){return Object.keys(t).forEach(e=>this.option[e]=t[e]),this}_mouseDown(e){if(!DDManager.mouseHandled)return 0!==e.button||(!!e.target.closest(skipMouseDown)||(!(!this.option.cancel||!e.target.closest(this.option.cancel))||(this.mouseDownEvent=e,delete this.dragging,delete DDManager.dragElement,delete DDManager.dropElement,document.addEventListener("mousemove",this._mouseMove,!0),document.addEventListener("mouseup",this._mouseUp,!0),isTouch&&(this.dragEl.addEventListener("touchmove",touchmove),this.dragEl.addEventListener("touchend",touchend)),e.preventDefault(),document.activeElement&&document.activeElement.blur(),DDManager.mouseHandled=!0)))}_callDrag(e){this.dragging&&(e=Utils.initEvent(e,{target:this.el,type:"drag"}),this.option.drag&&this.option.drag(e,this.ui()),this.triggerEvent("drag",e))}_mouseMove(e){var t,i=this.mouseDownEvent;return this.dragging?(this._dragFollow(e),DDManager.pauseDrag?(t=Number.isInteger(DDManager.pauseDrag)?DDManager.pauseDrag:100,this.dragTimeout&&window.clearTimeout(this.dragTimeout),this.dragTimeout=window.setTimeout(()=>this._callDrag(e),t)):this._callDrag(e)):3<Math.abs(e.x-i.x)+Math.abs(e.y-i.y)&&(this.dragging=!0,(t=(DDManager.dragElement=this).el.gridstackNode?.grid)?DDManager.dropElement=t.el.ddElement.ddDroppable:delete DDManager.dropElement,this.helper=this._createHelper(e),this._setupHelperContainmentStyle(),this.dragOffset=this._getDragOffset(e,this.el,this.helperContainment),i=Utils.initEvent(e,{target:this.el,type:"dragstart"}),this._setupHelperStyle(e),this.option.start&&this.option.start(i,this.ui()),this.triggerEvent("dragstart",i)),e.preventDefault(),!0}_mouseUp(e){var t;document.removeEventListener("mousemove",this._mouseMove,!0),document.removeEventListener("mouseup",this._mouseUp,!0),isTouch&&(this.dragEl.removeEventListener("touchmove",touchmove,!0),this.dragEl.removeEventListener("touchend",touchend,!0)),this.dragging&&(delete this.dragging,DDManager.dropElement?.el===this.el.parentElement&&delete DDManager.dropElement,this.helperContainment.style.position=this.parentOriginStylePosition||null,this.helper===this.el?this._removeHelperStyle():this.helper.remove(),t=Utils.initEvent(e,{target:this.el,type:"dragstop"}),this.option.stop&&this.option.stop(t),this.triggerEvent("dragstop",t),DDManager.dropElement&&DDManager.dropElement.drop(e)),delete this.helper,delete this.mouseDownEvent,delete DDManager.dragElement,delete DDManager.dropElement,delete DDManager.mouseHandled,e.preventDefault()}_createHelper(e){let t=this.el;return"function"==typeof this.option.helper?t=this.option.helper(e):"clone"===this.option.helper&&(t=Utils.cloneNode(this.el)),document.body.contains(t)||Utils.appendTo(t,"parent"===this.option.appendTo?this.el.parentElement:this.option.appendTo),t===this.el&&(this.dragElementOriginStyle=DDDraggable.originStyleProp.map(e=>this.el.style[e])),t}_setupHelperStyle(e){this.helper.classList.add("ui-draggable-dragging");const t=this.helper.style;return t.pointerEvents="none",t.width=this.dragOffset.width+"px",t.height=this.dragOffset.height+"px",t.willChange="left, top",t.position="fixed",this._dragFollow(e),t.transition="none",setTimeout(()=>{this.helper&&(t.transition=null)},0),this}_removeHelperStyle(){if(this.helper.classList.remove("ui-draggable-dragging"),!(this.helper?.gridstackNode)?._isAboutToRemove&&this.dragElementOriginStyle){let t=this.helper,e=this.dragElementOriginStyle.transition||null;t.style.transition=this.dragElementOriginStyle.transition="none",DDDraggable.originStyleProp.forEach(e=>t.style[e]=this.dragElementOriginStyle[e]||null),setTimeout(()=>t.style.transition=e,50)}return delete this.dragElementOriginStyle,this}_dragFollow(e){let t=0,i=0;const s=this.helper.style;var n=this.dragOffset;s.left=(e.clientX+n.offsetLeft-t)*this.dragScale.x+"px",s.top=(e.clientY+n.offsetTop-i)*this.dragScale.y+"px"}_setupHelperContainmentStyle(){return this.helperContainment=this.helper.parentElement,"fixed"!==this.helper.style.position&&(this.parentOriginStylePosition=this.helperContainment.style.position,getComputedStyle(this.helperContainment).position.match(/static/)&&(this.helperContainment.style.position="relative")),this}_getDragOffset(e,t,i){let s=0,n=0;if(i){const r=document.createElement("div");Utils.addElStyles(r,{opacity:"0",position:"fixed",top:"0px",left:"0px",width:"1px",height:"1px",zIndex:"-999999"}),i.appendChild(r);var o=r.getBoundingClientRect();i.removeChild(r),s=o.left,n=o.top,this.dragScale={x:1/o.width,y:1/o.height}}i=t.getBoundingClientRect();return{left:i.left,top:i.top,offsetLeft:-e.clientX+i.left-s,offsetTop:-e.clientY+i.top-n,width:i.width*this.dragScale.x,height:i.height*this.dragScale.y}}ui(){const e=this.el.parentElement;var t=e.getBoundingClientRect(),i=this.helper.getBoundingClientRect();return{position:{top:(i.top-t.top)*this.dragScale.y,left:(i.left-t.left)*this.dragScale.x}}}}DDDraggable.originStyleProp=["transition","pointerEvents","position","left","top","minWidth","willChange"];export{DDDraggable};