import{DDManager}from"./dd-manager";import{DDBaseImplement}from"./dd-base-impl";import{Utils}from"./utils";import{isTouch,pointerenter,pointerleave}from"./dd-touch";class DDDroppable extends DDBaseImplement{constructor(e,t={}){super(),this.el=e,this.option=t,this._mouseEnter=this._mouseEnter.bind(this),this._mouseLeave=this._mouseLeave.bind(this),this.enable(),this._setupAccept()}on(e,t){super.on(e,t)}off(e){super.off(e)}enable(){!1!==this.disabled&&(super.enable(),this.el.classList.add("ui-droppable"),this.el.classList.remove("ui-droppable-disabled"),this.el.addEventListener("mouseenter",this._mouseEnter),this.el.addEventListener("mouseleave",this._mouseLeave),isTouch&&(this.el.addEventListener("pointerenter",pointerenter),this.el.addEventListener("pointerleave",pointerleave)))}disable(e=!1){!0!==this.disabled&&(super.disable(),this.el.classList.remove("ui-droppable"),e||this.el.classList.add("ui-droppable-disabled"),this.el.removeEventListener("mouseenter",this._mouseEnter),this.el.removeEventListener("mouseleave",this._mouseLeave),isTouch&&(this.el.removeEventListener("pointerenter",pointerenter),this.el.removeEventListener("pointerleave",pointerleave)))}destroy(){this.disable(!0),this.el.classList.remove("ui-droppable"),this.el.classList.remove("ui-droppable-disabled"),super.destroy()}updateOption(t){return Object.keys(t).forEach(e=>this.option[e]=t[e]),this._setupAccept(),this}_mouseEnter(e){DDManager.dragElement&&this._canDrop(DDManager.dragElement.el)&&(e.preventDefault(),e.stopPropagation(),DDManager.dropElement&&DDManager.dropElement!==this&&DDManager.dropElement._mouseLeave(e),DDManager.dropElement=this,e=Utils.initEvent(e,{target:this.el,type:"dropover"}),this.option.over&&this.option.over(e,this._ui(DDManager.dragElement)),this.triggerEvent("dropover",e),this.el.classList.add("ui-droppable-over"))}_mouseLeave(i){if(DDManager.dragElement&&DDManager.dropElement===this){i.preventDefault(),i.stopPropagation();var e=Utils.initEvent(i,{target:this.el,type:"dropout"});if(this.option.out&&this.option.out(e,this._ui(DDManager.dragElement)),this.triggerEvent("dropout",e),DDManager.dropElement===this){delete DDManager.dropElement;let e,t=this.el.parentElement;for(;!e&&t;)e=t.ddElement?.ddDroppable,t=t.parentElement;e&&e._mouseEnter(i)}}}drop(e){e.preventDefault();e=Utils.initEvent(e,{target:this.el,type:"drop"});this.option.drop&&this.option.drop(e,this._ui(DDManager.dragElement)),this.triggerEvent("drop",e)}_canDrop(e){return e&&(!this.accept||this.accept(e))}_setupAccept(){return this.option.accept&&("string"==typeof this.option.accept?this.accept=e=>e.classList.contains(this.option.accept)||e.matches(this.option.accept):this.accept=this.option.accept),this}_ui(e){return{draggable:e.el,...e.ui()}}}export{DDDroppable};